stages:
  - tests
  - deploy
  - migrations

image: projects.ronasit.com:4567/docker/gcloud-sdk:latest

variables:
  CI_PROJECT_NAME: laravel
  DOMAIN: api.laravel.ronasit.com
  DOCKERFILE: ./Dockerfile
  CHART_REPO: ronasit/laravel
  CHART_VERSION: "2.0.8"
  CHART_VALUES: chart/values.yaml
  DOCKER_CONTAINER_REGISTRY: gcr.io/ronas-it-development/${CI_PROJECT_NAME}

.deploy_template: &deploy
  stage: deploy
  variables:
    ENVFILE: .env.dev
  before_script:
    - cp ${ENVFILE} .env
  script:
    - gcloud auth configure-docker
    - docker build -t ${DOCKER_CONTAINER_REGISTRY}:${CI_PIPELINE_ID} -f ${DOCKERFILE} .
    - docker push ${DOCKER_CONTAINER_REGISTRY}:${CI_PIPELINE_ID}
    - helm repo update
    - helm upgrade --wait --install ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG} ${CHART_REPO} --version ${CHART_VERSION} -f ${CHART_VALUES}
      --namespace=${CI_PROJECT_NAME}
      --set environment=${CI_ENVIRONMENT_SLUG}
      --set ingress.host=$(echo "${CI_ENVIRONMENT_URL}" | awk -F/ '{print $3}')
      --set image.repository=${DOCKER_CONTAINER_REGISTRY}
      --set image.tag=${CI_PIPELINE_ID}
    - curl https://projects.ronasit.com/snippets/31/raw | bash
  tags:
    - docker
    - linux

.stop_template: &stop
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - helm delete --purge ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
  when: manual
  tags:
    - docker
    - linux

.migrations_template: &migrations
  variables:
    GIT_STRATEGY: none
  stage: migrations
  script:
    - kubectl -n ${CI_PROJECT_NAME} rollout status $(kubectl -n ${CI_PROJECT_NAME} get deploy -l "app=${CI_ENVIRONMENT_SLUG}" -o name)
    - POD=$(kubectl -n ${CI_PROJECT_NAME} get pods --selector="app=${CI_ENVIRONMENT_SLUG}" | grep -m 1 -E  'Running' | awk '{print $1}')
    - kubectl -n ${CI_PROJECT_NAME} exec -i $POD --
      php artisan migrate --force
  tags:
    - docker
    - linux

tests:
  stage: tests
  variables:
    POSTGRES_USER: pguser
    POSTGRES_PASSWORD: ""
    POSTGRES_DB: pgdb
  image: ronasit/php-nginx:7.1
  services:
    - postgres:11.1
  before_script:
    - cp .env.dev.testing .env.testing
    - composer install
  artifacts:
    paths:
    - vendor
    expire_in: 1 hour
  script:
    - php vendor/bin/phpunit --stop-on-failure ./tests/
  after_script:
    - cat storage/logs/*.log || true
  tags:
    - docker
    - linux

deploy:
  <<: *deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://${CI_ENVIRONMENT_SLUG}.${DOMAIN}
    on_stop: stop
  when: manual
  except:
    - development
    - master
    - production
    - tags

stop:
  <<: *stop
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  except:
    - development
    - master
    - production
    - tags
    
deploy_development:
  <<: *deploy
  environment:
    name: "development"
    url: https://dev.api.${DOMAIN}
  only:
    - development

migrations_development:
  <<: *migrations
  environment:
    name: "development"
  only:
    - development
