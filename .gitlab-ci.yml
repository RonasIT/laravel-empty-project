stages:
  - tests
  - deploy
  - migrations

image: projects.ronasit.com:4567/docker/gcloud-sdk:latest

variables:
  CI_PROJECT_NAME: laravel
  DOMAIN: laravel-empty-project.ronasit.com
  DOCKERFILE: ./Dockerfile
  CHART_REPO: ronasit/laravel
  CHART_VERSION: 3.4.0-beta
  CHART_VALUES: k8s/values.yaml
  DOCKER_CONTAINER_REGISTRY: gcr.io/ronas-it-development/${CI_PROJECT_NAME}
  APP_NAME: Laravel
  FILESYSTEM_DRIVER: local
  GOOGLE_CLOUD_STORAGE_BUCKET: ronasit-development
  GOOGLE_CLOUD_PROJECT_ID: ronas-it-development
  GOOGLE_CLOUD_KEY_FILE: gcs.key

.deploy_template: &deploy
  stage: deploy
  script:
    - gcloud auth configure-docker
    - docker build -t ${DOCKER_CONTAINER_REGISTRY}:${CI_PIPELINE_ID} -f ${DOCKERFILE} .
    - docker push ${DOCKER_CONTAINER_REGISTRY}:${CI_PIPELINE_ID}
    - helm repo update
    - curl https://projects.ronasit.com/k8s-tools/charts/laravel/raw/${CHART_VERSION}/helpers/secrets.sh | bash
    - helm upgrade --wait --install ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG} ${CHART_REPO} --version ${CHART_VERSION} -f ${CHART_VALUES}
      --namespace=${CI_PROJECT_NAME}
      --set environment=${CI_ENVIRONMENT_SLUG}
      --set appName=${APP_NAME}
      --set ingress.hosts[0]=$(echo "${CI_ENVIRONMENT_URL}" | awk -F/ '{print $3}')
      --set ingress.tls[0].secretName=${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}-tls
      --set ingress.tls[0].hosts[0]=$(echo "${CI_ENVIRONMENT_URL}" | awk -F/ '{print $3}')
      --set secret=${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
      --set image.repository=${DOCKER_CONTAINER_REGISTRY}
      --set image.tag=${CI_PIPELINE_ID}
      --set smtp.host=${MAIL_HOST}
      --set-string smtp.port=${MAIL_PORT}
      --set smtp.user=${MAIL_USERNAME}
      --set smtp.password=${MAIL_PASSWORD}
      --set gcs.key=${GCS_KEY_FILE}
      --set image.tag=${CI_PIPELINE_ID}
    - curl https://projects.ronasit.com/snippets/31/raw | bash
  tags:
    - docker
    - linux

.stop_template: &stop
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - helm delete --purge ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
  when: manual
  tags:
    - docker
    - linux

.migrations_template: &migrations
  variables:
    GIT_STRATEGY: none
  stage: migrations
  script:
    - curl https://projects.ronasit.com/k8s-tools/charts/laravel/raw/${CHART_VERSION}/helpers/migrations.sh
      | bash -s -- php artisan migrate
  tags:
    - docker
    - linux

tests:
  stage: tests
  variables:
    DB_CONNECTION: pgsql
    DB_HOST: postgres
    POSTGRES_USER: forge
    POSTGRES_DB: forge
    POSTGRES_PASSWORD: ""
    REDIS_HOST: "redis"
    MAIL_DRIVER: log
    FILESYSTEM_DRIVER: testing
    APP_ENV: testing
    APP_DEBUG: "true"
    APP_LOG_LEVEL: debug
    APP_URL: http://localhost
    DATA_COLLECTOR_KEY: laravel
  image: ronasit/php-nginx:7.3
  services:
    - name: ronasit/postgres:9.6
      alias: postgres
  artifacts:
    paths:
    - vendor
    expire_in: 1 hour
  script:
    - composer install
    - echo 'APP_KEY=' > .env
    - php artisan jwt:secret
    - php artisan key:generate
    - cp .env .env.testing
    - php vendor/bin/phpunit --stop-on-failure ./tests/
  after_script:
    - cat storage/logs/*.log || true
  tags:
    - docker
    - linux

deploy:
  <<: *deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://${CI_ENVIRONMENT_SLUG}.${DOMAIN}
    on_stop: stop
  when: manual
  except:
    - development
    - master
    - production
    - tags

stop:
  <<: *stop
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  except:
    - development
    - master
    - production
    - tags
    
deploy_development:
  <<: *deploy
  environment:
    name: "development"
    url: https://dev.${DOMAIN}
  only:
    - development

migrations_development:
  <<: *migrations
  environment:
    name: "development"
  only:
    - development

deploy_staging:
  <<: *deploy
  variables:
    DOCKER_CONTAINER_REGISTRY: gcr.io/ronas-it-development/${CI_PROJECT_NAME}-stg
    SECRET_PREFIX: K8S_SECRET_STG_
  environment:
    name: "staging"
    url: https://stg.${DOMAIN}
  only:
    - master

migrations_staging:
  <<: *migrations
  environment:
    name: "staging"
  only:
    - master
