stages:
  - prepare
  - tests
  - deploy

variables:
  CI_PROJECT_NAME: laravel
  DOMAIN: laravel-empty-project.ronasit.com
  DOCKERFILE: ./Dockerfile
  CHART_REPO: ronasit/laravel
  CHART_VERSION: &ref 8.0.2
  CHART_VALUES: k8s/values.yaml
  DOCKER_CONTAINER_REGISTRY: gcr.io/ronas-it-development/${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
  APP_NAME: Laravel
  FILESYSTEM_DRIVER: local
  GOOGLE_CLOUD_STORAGE_BUCKET: ronasit-development
  GOOGLE_CLOUD_PROJECT_ID: ronas-it-development

include:
  - project: 'k8s-tools/charts/laravel'
    ref: *ref
    file: '/helpers/.gitlab-ci-template.yml'

php_dependencies:
  stage: prepare
  image: ronasit/php-nginx:7.4
  artifacts:
    paths:
    - vendor
    expire_in: 1 hour
  script:
    - composer install
  tags:
    - docker
    - linux

tests:
  stage: tests
  variables:
    DB_CONNECTION: pgsql
    DB_HOST: postgres
    POSTGRES_USER: forge
    POSTGRES_DB: forge
    POSTGRES_PASSWORD: ""
    REDIS_HOST: "redis"
    MAIL_DRIVER: log
    FILESYSTEM_DRIVER: testing
    APP_ENV: testing
    APP_DEBUG: "true"
    APP_LOG_LEVEL: debug
    APP_URL: http://localhost
    DATA_COLLECTOR_KEY: laravel
  image: ronasit/php-nginx:7.4
  services:
    - name: ronasit/postgres:9.6
      alias: postgres
  artifacts:
    paths:
    - vendor
    expire_in: 1 hour
  script:
    - composer install
    - echo 'APP_KEY=' > .env
    - php artisan jwt:secret
    - php artisan key:generate
    - cp .env .env.testing
    - php vendor/bin/phpunit --stop-on-failure ./tests/
  after_script:
    - cat storage/logs/*.log || true
  tags:
    - docker
    - linux

deploy:
  extends: .deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://${CI_ENVIRONMENT_SLUG}.${DOMAIN}
    on_stop: stop
  when: manual
  except:
    - development
    - master
    - production
    - tags

stop:
  extends: .stop
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  except:
    - development
    - master
    - production
    - tags
        
deploy_development:
  extends: .deploy
  environment:
    name: "development"
    url: https://dev.${DOMAIN}
  only:
    - development
    
deploy_staging:
  extends: .deploy
  variables:
    SECRET_PREFIX: K8S_SECRET_STG_
  environment:
    name: "staging"
    url: https://stg.${DOMAIN}
  only:
    - web

